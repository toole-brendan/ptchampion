/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.LeaderboardApi
import org.openapitools.client.models.HandleGetLocalLeaderboard200ResponseInner
import org.openapitools.client.models.LeaderboardResponseInner

class LeaderboardApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of LeaderboardApi
        //val apiInstance = LeaderboardApi()

        // to test handleGetLocalLeaderboard
        should("test handleGetLocalLeaderboard") {
            // uncomment below to test handleGetLocalLeaderboard
            //val exerciseId : kotlin.Int = 56 // kotlin.Int | ID of the exercise to filter leaderboard by
            //val latitude : kotlin.Double = 1.2 // kotlin.Double | User's current latitude
            //val longitude : kotlin.Double = 1.2 // kotlin.Double | User's current longitude
            //val radiusMeters : kotlin.Double = 1.2 // kotlin.Double | Search radius in meters
            //val result : kotlin.collections.List<HandleGetLocalLeaderboard200ResponseInner> = apiInstance.handleGetLocalLeaderboard(exerciseId, latitude, longitude, radiusMeters)
            //result shouldBe ("TODO")
        }

        // to test leaderboardExerciseTypeGet
        should("test leaderboardExerciseTypeGet") {
            // uncomment below to test leaderboardExerciseTypeGet
            //val exerciseType : kotlin.String = exerciseType_example // kotlin.String | Type of exercise for the leaderboard
            //val limit : kotlin.Int = 56 // kotlin.Int | Maximum number of leaderboard entries to return
            //val result : kotlin.collections.List<LeaderboardResponseInner> = apiInstance.leaderboardExerciseTypeGet(exerciseType, limit)
            //result shouldBe ("TODO")
        }

    }
}
