openapi: 3.0.0
info:
  version: 1.0.0
  title: PT Champion API
  description: API for the PT Champion fitness tracking application
servers:
  - url: /api/v1
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        profilePictureUrl:
          type: string
          nullable: true
          format: uri
        location:
          type: string
          nullable: true
        latitude:
          type: string
          nullable: true
        longitude:
          type: string
          nullable: true
        lastSyncedAt:
          type: string
          nullable: true
        createdAt:
          type: string
          nullable: true
        updatedAt:
          type: string
          nullable: true
      required:
        - id
        - username
        - email
      description: User profile information
    
    Workout:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        exerciseId:
          type: integer
        exerciseType:
          type: string
          enum: [pushup, pullup, situp, run]
        repetitions:
          type: integer
          nullable: true
        durationSeconds:
          type: integer
          nullable: true
        distanceMeters:
          type: number
          format: decimal
          nullable: true
        formScore:
          type: integer
          minimum: 0
          maximum: 100
          default: 0
        grade:
          type: integer
          minimum: 0
          maximum: 100
        isPublic:
          type: boolean
          default: false
        completedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        deviceId:
          type: string
          nullable: true
        metadata:
          type: object
          nullable: true
        notes:
          type: string
          nullable: true
        syncStatus:
          type: string
          nullable: true
          enum:
            - synced
            - pending
            - conflict
      required:
        - id
        - userId
        - exerciseId
        - exerciseType
        - formScore
        - grade
        - completedAt
        - createdAt
      description: A completed workout session
    
    UserExercise:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        exerciseId:
          type: integer
        repetitions:
          type: integer
          nullable: true
        formScore:
          type: integer
          nullable: true
          minimum: 0
          maximum: 100
        timeInSeconds:
          type: integer
          nullable: true
        grade:
          type: integer
          nullable: true
          minimum: 0
          maximum: 100
        completed:
          type: boolean
        metadata:
          type: string
          nullable: true
        deviceId:
          type: string
          nullable: true
        syncStatus:
          type: string
          nullable: true
          enum:
            - synced
            - pending
            - conflict
        createdAt:
          type: string
          nullable: true
        updatedAt:
          type: string
          nullable: true
      required:
        - id
        - userId
        - exerciseId
        - completed
      description: Legacy exercise record (deprecated, use Workout instead)
      
    InsertUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        profilePictureUrl:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        latitude:
          type: string
          nullable: true
        longitude:
          type: string
          nullable: true
      required:
        - username
        - email
        - password
      description: Data required to register a new user
    
    UpdateUserRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 30
        display_name:
          type: string
          maxLength: 100
        profile_picture_url:
          type: string
          format: uri
        location:
          type: string
          maxLength: 100
        latitude:
          type: number
        longitude:
          type: number
      description: Fields to update in user profile
      
    UpdateLocationRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          description: User's latitude coordinate
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          description: User's longitude coordinate
      required:
        - latitude
        - longitude
      description: User location coordinates for updating position
      
    InsertWorkout:
      type: object
      properties:
        exerciseId:
          type: integer
          minimum: 1
        exerciseType:
          type: string
          enum: [pushup, pullup, situp, run]
        repetitions:
          type: integer
          minimum: 0
          nullable: true
        durationSeconds:
          type: integer
          minimum: 0
          nullable: true
        distanceMeters:
          type: number
          format: decimal
          minimum: 0
          nullable: true
        formScore:
          type: integer
          minimum: 0
          maximum: 100
          default: 0
        grade:
          type: integer
          minimum: 0
          maximum: 100
        isPublic:
          type: boolean
          default: false
        completedAt:
          type: string
          format: date-time
        deviceId:
          type: string
          nullable: true
        metadata:
          type: object
          nullable: true
        notes:
          type: string
          nullable: true
        idempotencyKey:
          type: string
          nullable: true
      required:
        - exerciseId
        - exerciseType
        - grade
        - completedAt
      description: Data for logging a new workout (formScore defaults to 0 if not provided)
      
    InsertUserExercise:
      type: object
      properties:
        userId:
          type: integer
          minimum: -2147483648
          maximum: 2147483647
        exerciseId:
          type: integer
          minimum: -2147483648
          maximum: 2147483647
        repetitions:
          type: integer
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
        formScore:
          type: integer
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
        timeInSeconds:
          type: integer
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
        grade:
          type: integer
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
        completed:
          type: boolean
          nullable: true
        metadata:
          type: string
          nullable: true
        deviceId:
          type: string
          nullable: true
        syncStatus:
          type: string
          nullable: true
      required:
        - userId
        - exerciseId
      description: Legacy data for recording a user exercise (deprecated)
    
    SyncRequest:
      type: object
      properties:
        userId:
          type: integer
        deviceId:
          type: string
        lastSyncTimestamp:
          type: string
          format: date-time
        data:
          type: object
          properties:
            workouts:
              type: array
              items:
                $ref: '#/components/schemas/InsertWorkout'
            userExercises:
              type: array
              items:
                $ref: '#/components/schemas/InsertUserExercise'
              description: Legacy field for backward compatibility
            profile:
              type: object
              properties:
                displayName:
                  type: string
                  nullable: true
                profilePictureUrl:
                  type: string
                  nullable: true
                location:
                  type: string
                  nullable: true
      required:
        - userId
        - deviceId
        - lastSyncTimestamp
      description: Request payload for synchronizing data
      
    SyncResponse:
      type: object
      properties:
        success:
          type: boolean
        timestamp:
          type: string
          format: date-time
        data:
          type: object
          properties:
            workouts:
              type: array
              items:
                $ref: '#/components/schemas/Workout'
            userExercises:
              type: array
              items:
                $ref: '#/components/schemas/UserExercise'
              description: Legacy field for backward compatibility
            profile:
              $ref: '#/components/schemas/User'
        conflicts:
          type: array
          items:
            $ref: '#/components/schemas/Workout'
      required:
        - success
        - timestamp
      description: Response payload after data synchronization
      
    WorkoutResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        exercise_id:
          type: integer
        exercise_name:
          type: string
        exercise_type:
          type: string
        reps:
          type: integer
          nullable: true
        duration_seconds:
          type: integer
          nullable: true
        distance_meters:
          type: number
          nullable: true
        form_score:
          type: integer
          minimum: 0
          maximum: 100
        grade:
          type: integer
        is_public:
          type: boolean
        completed_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        device_id:
          type: string
          nullable: true
        metadata:
          type: object
          nullable: true
        notes:
          type: string
          nullable: true
      required:
        - id
        - user_id
        - exercise_id
        - exercise_name
        - exercise_type
        - form_score
        - grade
        - is_public
        - completed_at
        - created_at
      description: A single recorded workout session (API response format)
      
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        refreshToken:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - token
        - refreshToken
        - user
      description: Authentication token and user profile
      
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
        - email
        - password
      description: User credentials for login
      
    LogExerciseResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        exercise_id:
          type: integer
        exercise_name:
          type: string
        exercise_type:
          type: string
        reps:
          type: integer
        time_in_seconds:
          type: integer
        distance:
          type: integer
        notes:
          type: string
        grade:
          type: integer
        created_at:
          type: string
          format: date-time
      required:
        - id
        - user_id
        - exercise_id
        - exercise_name
        - exercise_type
        - grade
        - created_at
      description: Legacy logged exercise data (deprecated, use WorkoutResponse)
      
    LogExerciseRequest:
      type: object
      properties:
        exercise_id:
          type: integer
          minimum: 0
          exclusiveMinimum: true
        reps:
          type: integer
          minimum: 0
        duration:
          type: integer
          minimum: 0
        distance:
          type: integer
          minimum: 0
        notes:
          type: string
      required:
        - exercise_id
      description: Legacy exercise data (deprecated, use InsertWorkout)
    
    PaginatedExerciseHistoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              user_id:
                type: integer
              exercise_id:
                type: integer
              exercise_name:
                type: string
              exercise_type:
                type: string
              reps:
                type: integer
              time_in_seconds:
                type: integer
              distance:
                type: integer
              notes:
                type: string
              grade:
                type: integer
              created_at:
                type: string
                format: date-time
            required:
              - id
              - user_id
              - exercise_id
              - exercise_name
              - exercise_type
              - grade
              - created_at
        total_count:
          type: integer
        page:
          type: integer
        page_size:
          type: integer
      required:
        - items
        - total_count
        - page
        - page_size
      description: Legacy paginated exercise history (deprecated, use PaginatedWorkoutsResponse)
    
    LeaderboardResponse:
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          display_name:
            type: string
          best_grade:
            type: integer
        required:
          - username
          - display_name
          - best_grade
      description: Leaderboard entries with best scores
      
    PaginatedWorkoutsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutResponse'
        totalCount:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer
        totalPages:
          type: integer
      required:
        - items
        - totalCount
        - page
        - pageSize
        - totalPages
        
    LocalLeaderboardResponse:
      type: array
      items:
        type: object
        properties:
          userId:
            type: integer
          username:
            type: string
          displayName:
            type: string
            nullable: true
          exerciseId:
            type: integer
          score:
            type: integer
          distanceMeters:
            type: number
          lastUpdated:
            type: string
        required:
          - userId
          - username
          - displayName
          - exerciseId
          - score
  parameters: {}
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertUser'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input (e.g., validation error)
        '409':
          description: Username or email already exists
        '500':
          description: Internal Server Error
          
  /auth/login:
    post:
      summary: Authenticate a user and get JWT token
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid input
        '401':
          description: Invalid email or password
        '500':
          description: Internal Server Error
          
  /users/me:
    patch:
      summary: Update current user profile
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized - missing or invalid token
        '409':
          description: Username already taken
        '500':
          description: Internal Server Error
          
  /users/me/location:
    patch:
      summary: Update current user's location
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLocationRequest'
      responses:
        '200':
          description: Location updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Location updated successfully"
                required:
                  - message
        '400':
          description: Invalid input or validation error
        '401':
          description: Unauthorized - missing or invalid token
        '500':
          description: Internal Server Error
          
  /workouts:
    post:
      summary: Log a completed workout
      tags:
        - Workouts
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertWorkout'
      responses:
        '201':
          description: Workout logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutResponse'
        '400':
          description: Invalid input or missing required metrics for exercise type
        '401':
          description: Unauthorized - missing or invalid token
        '409':
          description: Duplicate workout (idempotency key conflict)
        '500':
          description: Internal Server Error
    get:
      summary: Get workout history for the current user
      tags:
        - Workouts
      operationId: getWorkouts
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
          required: false
        - name: pageSize
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
          required: false
        - name: exerciseType
          in: query
          schema:
            type: string
            enum: [pushup, pullup, situp, run]
          description: Filter by exercise type
          required: false
      responses:
        '200':
          description: Workout history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkoutsResponse'
        '401':
          description: Unauthorized - missing or invalid token
        '500':
          description: Internal Server Error
          
  /exercises:
    post:
      summary: Log a completed exercise (legacy endpoint)
      tags:
        - Exercises
      deprecated: true
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogExerciseRequest'
      responses:
        '201':
          description: Exercise logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogExerciseResponse'
        '400':
          description: Invalid input or missing required metrics for exercise type
        '401':
          description: Unauthorized - missing or invalid token
        '500':
          description: Internal Server Error
    get:
      summary: Get exercise history for the current user (legacy endpoint)
      tags:
        - Exercises
      deprecated: true
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
          required: false
        - name: pageSize
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: Number of items per page
          required: false
      responses:
        '200':
          description: Exercise history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseHistoryResponse'
        '401':
          description: Unauthorized - missing or invalid token
        '500':
          description: Internal Server Error
          
  /leaderboard/{exerciseType}:
    get:
      summary: Get leaderboard for a specific exercise type
      tags:
        - Leaderboard
      parameters:
        - name: exerciseType
          in: path
          schema:
            type: string
            enum:
              - pushup
              - pullup
              - situp
              - run
          description: Type of exercise for the leaderboard
          required: true
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
          description: Maximum number of leaderboard entries to return
          required: false
      responses:
        '200':
          description: Leaderboard retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardResponse'
        '400':
          description: Invalid exercise type
        '500':
          description: Internal Server Error
          
  /leaderboards/local:
    get:
      summary: Get leaderboard filtered by proximity to user location
      tags:
        - Leaderboard
      operationId: getLocalLeaderboard
      security:
        - BearerAuth: []
      parameters:
        - name: exercise_id
          in: query
          schema:
            type: integer
          description: ID of the exercise to filter leaderboard by
          required: true
        - name: latitude
          in: query
          schema:
            type: number
            format: double
          description: User's current latitude
          required: true
        - name: longitude
          in: query
          schema:
            type: number
            format: double
          description: User's current longitude
          required: true
        - name: radius_meters
          in: query
          schema:
            type: number
            format: double
            default: 8047
          description: Search radius in meters
          required: false
      responses:
        '200':
          description: Local leaderboard retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalLeaderboardResponse'
        '400':
          description: Missing or invalid required query parameters
        '500':
          description: Internal Server Error retrieving local leaderboard
          
  /sync:
    post:
      summary: Synchronize client data with the server
      tags:
        - Sync
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
      responses:
        '200':
          description: Sync successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
        '400':
          description: Invalid sync request
        '401':
          description: Unauthorized - missing or invalid token
        '500':
          description: Internal Server Error during sync
