//
// PaginatedExerciseHistoryResponseItemsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PaginatedExerciseHistoryResponseItemsInner: Codable, JSONEncodable, Hashable {

    public var id: Int
    public var userId: Int
    public var exerciseId: Int
    public var exerciseName: String
    public var exerciseType: String
    public var reps: Int?
    public var timeInSeconds: Int?
    public var distance: Int?
    public var notes: String?
    public var grade: Int
    public var createdAt: Date

    public init(id: Int, userId: Int, exerciseId: Int, exerciseName: String, exerciseType: String, reps: Int? = nil, timeInSeconds: Int? = nil, distance: Int? = nil, notes: String? = nil, grade: Int, createdAt: Date) {
        self.id = id
        self.userId = userId
        self.exerciseId = exerciseId
        self.exerciseName = exerciseName
        self.exerciseType = exerciseType
        self.reps = reps
        self.timeInSeconds = timeInSeconds
        self.distance = distance
        self.notes = notes
        self.grade = grade
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case userId = "user_id"
        case exerciseId = "exercise_id"
        case exerciseName = "exercise_name"
        case exerciseType = "exercise_type"
        case reps
        case timeInSeconds = "time_in_seconds"
        case distance
        case notes
        case grade
        case createdAt = "created_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(userId, forKey: .userId)
        try container.encode(exerciseId, forKey: .exerciseId)
        try container.encode(exerciseName, forKey: .exerciseName)
        try container.encode(exerciseType, forKey: .exerciseType)
        try container.encodeIfPresent(reps, forKey: .reps)
        try container.encodeIfPresent(timeInSeconds, forKey: .timeInSeconds)
        try container.encodeIfPresent(distance, forKey: .distance)
        try container.encodeIfPresent(notes, forKey: .notes)
        try container.encode(grade, forKey: .grade)
        try container.encode(createdAt, forKey: .createdAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PaginatedExerciseHistoryResponseItemsInner: Identifiable {}
