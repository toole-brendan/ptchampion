//
// User.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** User profile information */
public struct User: Codable, JSONEncodable, Hashable {

    public var id: Int
    public var username: String
    public var displayName: String?
    public var profilePictureUrl: String?
    public var location: String?
    public var latitude: String?
    public var longitude: String?
    public var lastSyncedAt: String?
    public var createdAt: String?
    public var updatedAt: String?

    public init(id: Int, username: String, displayName: String?, profilePictureUrl: String?, location: String?, latitude: String?, longitude: String?, lastSyncedAt: String?, createdAt: String?, updatedAt: String?) {
        self.id = id
        self.username = username
        self.displayName = displayName
        self.profilePictureUrl = profilePictureUrl
        self.location = location
        self.latitude = latitude
        self.longitude = longitude
        self.lastSyncedAt = lastSyncedAt
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case username
        case displayName
        case profilePictureUrl
        case location
        case latitude
        case longitude
        case lastSyncedAt
        case createdAt
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(username, forKey: .username)
        try container.encode(displayName, forKey: .displayName)
        try container.encode(profilePictureUrl, forKey: .profilePictureUrl)
        try container.encode(location, forKey: .location)
        try container.encode(latitude, forKey: .latitude)
        try container.encode(longitude, forKey: .longitude)
        try container.encode(lastSyncedAt, forKey: .lastSyncedAt)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension User: Identifiable {}
