// Generated by Style Dictionary
import SwiftUI

public extension AppTheme {
  enum GeneratedColors {
    public static let cream = Color("Cream")
    public static let creamDark = Color("CreamDark")
    public static let deepOps = Color("DeepOps")
    public static let brassGold = Color("BrassGold")
    public static let armyTan = Color("ArmyTan")
    public static let oliveMist = Color("OliveMist")
    public static let commandBlack = Color("CommandBlack")
    public static let tacticalGray = Color("TacticalGray")
    public static let success = Color("Success")
    public static let warning = Color("Warning")
    public static let error = Color("Error")
    public static let info = Color("Info")
  }
  enum GeneratedTypography {
    public static let heading1: CGFloat = @"40"
    public static let heading2: CGFloat = @"32"
    public static let heading3: CGFloat = @"26"
    public static let heading4: CGFloat = @"22"
    public static let body: CGFloat = @"16"
    public static let small: CGFloat = @"14"
    public static let tiny: CGFloat = @"12"

    public static func heading(size: CGFloat) -> Font {
      return Font.custom("@"BebasNeue-Bold"", size: size, relativeTo: .body)
    }

    public static func body(size: CGFloat) -> Font {
      return Font.custom("@"Montserrat-Regular"", size: size, relativeTo: .body)
    }

    public static func bodyBold(size: CGFloat) -> Font {
      return Font.custom("@"Montserrat-Bold"", size: size, relativeTo: .body)
    }

    public static func bodySemibold(size: CGFloat) -> Font {
      return Font.custom("@"Montserrat-SemiBold"", size: size, relativeTo: .body)
    }

    public static func mono(size: CGFloat) -> Font {
      return Font.custom("@"RobotoMono-Medium"", size: size, relativeTo: .body)
    }

  }
  enum GeneratedRadius {
    public static let card: CGFloat = 12
    public static let panel: CGFloat = 16
    public static let button: CGFloat = 8
    public static let input: CGFloat = 8
    public static let radius: CGFloat = 4
    public static let radius: CGFloat = 8
    public static let radius: CGFloat = 16
  }
  enum GeneratedSpacing {
    public static let section: CGFloat = 32
    public static let cardGap: CGFloat = 16
    public static let contentPadding: CGFloat = 16
    public static let itemSpacing: CGFloat = 8
  }
  enum GeneratedShadows {
    public static let small = Shadow(
      color: Color("rgba(0, 0, 0, 0.1)"),
      radius: 4,
      x: 0,
      y: 2
    )

    public static let medium = Shadow(
      color: Color("rgba(0, 0, 0, 0.15)"),
      radius: 8,
      x: 0,
      y: 4
    )

    public static let large = Shadow(
      color: Color("rgba(0, 0, 0, 0.2)"),
      radius: 16,
      x: 0,
      y: 8
    )

  }
}
