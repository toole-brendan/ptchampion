name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      deploy_frontend:
        description: 'Deploy frontend'
        type: boolean
        default: true
      deploy_backend:
        description: 'Deploy backend'
        type: boolean
        default: false

env:
  AZURE_RESOURCE_GROUP: ptchampion-rg
  STORAGE_ACCOUNT: ptchampionweb
  FRONTEND_DOMAIN: ptchampion.ai
  FRONT_DOOR_PROFILE: ptchampion-frontend
  FRONT_DOOR_ENDPOINT: ptchampion

permissions:
  id-token: write
  contents: read

jobs:
  build-frontend:
    name: Build Web Frontend
    if: ${{ inputs.deploy_frontend }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./web
        run: npm ci

      - name: Build for production
        working-directory: ./web
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: web/dist

  deploy:
    name: Deploy
    needs: [build-frontend]
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy_frontend && needs.build-frontend.result == 'success' }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy frontend
      - name: Download web build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: web-build

      - name: Deploy web to Static Website
        run: |
          # Ensure static website is enabled
          az storage blob service-properties update \
            --account-name ${{ env.STORAGE_ACCOUNT }} \
            --static-website \
            --index-document index.html

          # Upload the web files
          az storage blob upload-batch \
            -s web-build \
            -d '$web' \
            --account-name ${{ env.STORAGE_ACCOUNT }} \
            --overwrite

      # Purge Front Door cache
      - name: Purge Front Door cache
        run: |
          az afd endpoint purge \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --profile-name ${{ env.FRONT_DOOR_PROFILE }} \
            --endpoint-name ${{ env.FRONT_DOOR_ENDPOINT }} \
            --content-paths "/*"

  health-check:
    name: Post-Deployment Health Checks
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Check Web App
        run: |
          WEB_URL="https://${{ env.FRONTEND_DOMAIN }}"
          echo "Testing web app: $WEB_URL"
          
          for i in {1..12}; do
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$WEB_URL")
            if [ "$RESPONSE" = "200" ]; then
              echo "Web check passed with 200 OK"
              break
            else
              echo "Attempt $i: Web check returned $RESPONSE, waiting 10 seconds..."
              sleep 10
            fi
            
            if [ $i -eq 12 ]; then
              echo "Web check failed after 2 minutes of attempts"
              exit 1
            fi
          done

      - name: Notify on successful deployment
        if: success()
        run: |
          echo "✅ Successfully deployed PT Champion frontend to production!"
          
          # Add Slack notification if you have a webhook
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"✅ Successfully deployed PT Champion to production!"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }} 